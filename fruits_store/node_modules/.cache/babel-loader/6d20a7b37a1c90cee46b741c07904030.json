{"ast":null,"code":"import { FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR } from './actionTypes';\n\nconst getAllProducts = () => dispatch => {\n  dispatch(fetchProductsRequest()); // dispatch della action to indicate that a fetch products request has started\n\n  fetch('http://localhost:3001/products').then(res => res.json()).then(data => {\n    dispatch(fetchProductsSuccess(data)); // dispatch della action to indicate thant call server is OK and returned with data\n  }).catch(err => {\n    dispatch(fetchProductsError(err)); // dispatch della action to indicate that the call server is Ko \n  });\n};\n\nconst fetchProductsRequest = data => {\n  return {\n    type: FETCH_PRODUCTS_REQUEST,\n    payload: {\n      products: data\n    }\n  };\n};\n\nconst fetchProductsSuccess = products => {\n  return {\n    type: FETCH_PRODUCTS_SUCCESS,\n    payload: {\n      products\n    }\n  };\n};\n\nconst fetchProductsError = error => {\n  return {\n    type: FETCH_PRODUCTS_ERROR,\n    payload: {\n      error\n    }\n  };\n};\n\nexport default getAllProducts;","map":{"version":3,"sources":["C:/Users/morettigi/Desktop/HTML/Exercise React-Redux/FruitsStore/fruits_store/src/redux/actions/action.js"],"names":["FETCH_PRODUCTS_REQUEST","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_ERROR","getAllProducts","dispatch","fetchProductsRequest","fetch","then","res","json","data","fetchProductsSuccess","catch","err","fetchProductsError","type","payload","products","error"],"mappings":"AAAA,SAAQA,sBAAR,EAAgCC,sBAAhC,EAAwDC,oBAAxD,QAAmF,eAAnF;;AAGA,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;AACrCA,EAAAA,QAAQ,CAACC,oBAAoB,EAArB,CAAR,CADqC,CACH;;AAClCC,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVN,IAAAA,QAAQ,CAACO,oBAAoB,CAACD,IAAD,CAArB,CAAR,CADU,CAC2B;AACxC,GAJL,EAKKE,KALL,CAKWC,GAAG,IAAI;AACVT,IAAAA,QAAQ,CAACU,kBAAkB,CAACD,GAAD,CAAnB,CAAR,CADU,CACwB;AACrC,GAPL;AAQH,CAVD;;AAYA,MAAMR,oBAAoB,GAAGK,IAAI,IAAI;AACjC,SAAO;AACHK,IAAAA,IAAI,EAAEf,sBADH;AAEHgB,IAAAA,OAAO,EAAE;AACLC,MAAAA,QAAQ,EAAEP;AADL;AAFN,GAAP;AAMH,CAPD;;AASA,MAAMC,oBAAoB,GAAIM,QAAD,IAAc;AACvC,SAAO;AACHF,IAAAA,IAAI,EAAEd,sBADH;AAEHe,IAAAA,OAAO,EAAE;AACLC,MAAAA;AADK;AAFN,GAAP;AAMH,CAPD;;AASA,MAAMH,kBAAkB,GAAGI,KAAK,IAAI;AAChC,SAAO;AACHH,IAAAA,IAAI,EAAEb,oBADH;AAEHc,IAAAA,OAAO,EAAE;AACLE,MAAAA;AADK;AAFN,GAAP;AAMH,CAPD;;AAUA,eAAef,cAAf","sourcesContent":["import {FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR} from './actionTypes';\r\n\r\n\r\nconst getAllProducts = () => dispatch => {\r\n    dispatch(fetchProductsRequest()); // dispatch della action to indicate that a fetch products request has started\r\n    fetch('http://localhost:3001/products')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(fetchProductsSuccess(data)) // dispatch della action to indicate thant call server is OK and returned with data\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchProductsError(err)) // dispatch della action to indicate that the call server is Ko \r\n        })\r\n}\r\n\r\nconst fetchProductsRequest = data => {\r\n    return {\r\n        type: FETCH_PRODUCTS_REQUEST,\r\n        payload: {\r\n            products: data\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchProductsSuccess = (products) => {\r\n    return {\r\n        type: FETCH_PRODUCTS_SUCCESS,\r\n        payload: {\r\n            products\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchProductsError = error => {\r\n    return {\r\n        type: FETCH_PRODUCTS_ERROR,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default getAllProducts;"]},"metadata":{},"sourceType":"module"}