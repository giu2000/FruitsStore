{"ast":null,"code":"import { FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR } from './actionTypes';\n\nconst getAllProducts = () => dispatch => {\n  dispatch(fetchProductsRequest()); // dispatch della action to indicate that a fetch products request has started\n\n  console.log('request ');\n  fetch('http://localhost:3001/products').then(res => res.json()).then(products => {\n    dispatch(fetchProductsSuccess(products)); // dispatch della action to indicate thant call server is OK and returned with data\n\n    console.log('request success');\n  }).catch(error => {\n    dispatch(fetchProductsError(error)); // dispatch della action to indicate that the call server is Ko \n\n    console.log('request error');\n  });\n};\n\nconst fetchProductsRequest = () => {\n  return {\n    type: FETCH_PRODUCTS_REQUEST\n  };\n};\n\nconst fetchProductsSuccess = products => {\n  return {\n    type: FETCH_PRODUCTS_SUCCESS,\n    payload: {\n      products\n    }\n  };\n};\n\nconst fetchProductsError = error => {\n  return {\n    type: FETCH_PRODUCTS_ERROR,\n    payload: {\n      error\n    }\n  };\n};\n\nexport default getAllProducts;","map":{"version":3,"sources":["C:/Users/Giulia/Desktop/Giochi/FruitsStore/fruits_store/src/redux/actions/getAllProducts.js"],"names":["FETCH_PRODUCTS_REQUEST","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_ERROR","getAllProducts","dispatch","fetchProductsRequest","console","log","fetch","then","res","json","products","fetchProductsSuccess","catch","error","fetchProductsError","type","payload"],"mappings":"AAAA,SAAQA,sBAAR,EAAgCC,sBAAhC,EAAwDC,oBAAxD,QAAmF,eAAnF;;AAEA,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;AACrCA,EAAAA,QAAQ,CAACC,oBAAoB,EAArB,CAAR,CADqC,CACH;;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,QAAQ,IAAI;AACdR,IAAAA,QAAQ,CAACS,oBAAoB,CAACD,QAAD,CAArB,CAAR,CADc,CAC2B;;AACzCN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GALL,EAMKO,KANL,CAMWC,KAAK,IAAI;AACZX,IAAAA,QAAQ,CAACY,kBAAkB,CAACD,KAAD,CAAnB,CAAR,CADY,CACwB;;AACpCT,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GATL;AAUH,CAbD;;AAeA,MAAMF,oBAAoB,GAAG,MAAM;AAC/B,SAAO;AACHY,IAAAA,IAAI,EAAEjB;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMa,oBAAoB,GAAID,QAAD,IAAc;AACvC,SAAO;AACHK,IAAAA,IAAI,EAAEhB,sBADH;AAEHiB,IAAAA,OAAO,EAAE;AACLN,MAAAA;AADK;AAFN,GAAP;AAMH,CAPD;;AASA,MAAMI,kBAAkB,GAAGD,KAAK,IAAI;AAChC,SAAO;AACHE,IAAAA,IAAI,EAAEf,oBADH;AAEHgB,IAAAA,OAAO,EAAE;AACLH,MAAAA;AADK;AAFN,GAAP;AAMH,CAPD;;AASA,eAAeZ,cAAf","sourcesContent":["import {FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR} from './actionTypes';\r\n\r\nconst getAllProducts = () => dispatch => {\r\n    dispatch(fetchProductsRequest()); // dispatch della action to indicate that a fetch products request has started\r\n    console.log('request ')\r\n    fetch('http://localhost:3001/products')\r\n        .then(res => res.json())\r\n        .then(products => {\r\n            dispatch(fetchProductsSuccess(products)) // dispatch della action to indicate thant call server is OK and returned with data\r\n            console.log('request success')\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchProductsError(error)) // dispatch della action to indicate that the call server is Ko \r\n            console.log('request error')\r\n        })\r\n}\r\n\r\nconst fetchProductsRequest = () => {\r\n    return {\r\n        type: FETCH_PRODUCTS_REQUEST,\r\n    }\r\n}\r\n\r\nconst fetchProductsSuccess = (products) => {\r\n    return {\r\n        type: FETCH_PRODUCTS_SUCCESS,\r\n        payload: {\r\n            products\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchProductsError = error => {\r\n    return {\r\n        type: FETCH_PRODUCTS_ERROR,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport default getAllProducts;"]},"metadata":{},"sourceType":"module"}